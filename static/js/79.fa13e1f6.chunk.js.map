{"version":3,"file":"static/js/79.fa13e1f6.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormOfContact = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const LabelForm = styled.label`\n  padding-bottom: ${p => p.theme.space[2]}px;\n  margin-right: ${p => p.theme.space[2]}px;\n  width: 360px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  text-decoration: overline ${p => p.theme.colors.pink};\n  text-shadow: ${p => p.theme.shadow};\n\n  &:hover,\n  &:focus {\n    text-decoration: overline ${p => p.theme.colors.darkPink};\n  }\n`;\n\nexport const InputForm = styled(Field)`\n  width: 270px;\n  padding: ${p => p.theme.space[3]}px;\n  border: 2px solid ${p => p.theme.colors.pink};\n  border-radius: ${p => p.theme.radii.normal};\n  outline: none;\n\n  ${LabelForm}:hover & {\n    border-color: ${p => p.theme.colors.darkPink};\n  }\n\n  ${LabelForm}:focus & {\n    border-color: ${p => p.theme.colors.darkPink};\n  }\n`;\n\nexport const ButtonForm = styled.button`\n  width: auto;\n  padding: ${p => p.theme.space[3]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: none;\n  background-color: ${p => p.theme.colors.pink};\n  box-shadow: ${p => p.theme.shadow};\n  color: ${p => p.theme.colors.white};\n  font-weight: ${p => p.theme.fontWeights.bold};\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.colors.darkPink};\n  }\n`;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\n    return contacts.filter(\n        ({ name, number }) =>\n            name.toLowerCase().includes(filter.toLowerCase()) ||\n            number.toLowerCase().includes(filter.toLowerCase())\n    );\n})","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport * as SC from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst nameErrorMessage =\n  \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\";\nconst numberErrorMessage =\n  'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +';\nconst emptyNameError = 'Field name is empty, please enter name of contact';\nconst emptyNumberError =\n  'Field number is empty, please enter number of contact';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required(emptyNameError)\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      nameErrorMessage\n    ),\n  number: yup\n    .string()\n    .required(emptyNumberError)\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      numberErrorMessage\n    ),\n});\n\nconst initialValues = { name: '', number: '' };\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const onSubmitForm = ({ name, number }, action) => {\n    contacts.find(contact => contact.name === name)\n      ? Notify.warning(`${name} is already in contact`)\n      : dispatch(addContacts({ name, number }));\n\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onSubmitForm}\n    >\n      <SC.FormOfContact>\n        <SC.LabelForm htmlFor=\"name\">\n          Name\n          <SC.InputForm type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" render={msg => Notify.warning(msg)} />\n        </SC.LabelForm>\n        <SC.LabelForm htmlFor=\"number\">\n          Number\n          <SC.InputForm type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" render={msg => Notify.warning(msg)} />\n        </SC.LabelForm>\n        <SC.ButtonForm type=\"submit\">Add contact</SC.ButtonForm>\n      </SC.FormOfContact>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const InputFilter = styled.input`\n  width: 100%;\n  padding: ${p => p.theme.space[3]}px;\n  border: none;\n  outline: none;\n`;\n\nexport const LabelFilter = styled.label`\n  padding-bottom: ${p => p.theme.space[2]}px;\n\n  width: 360px;\n  display: flex;\n  flex-direction: column;\n\n  text-decoration: overline ${p => p.theme.colors.pink};\n  text-shadow: ${p => p.theme.shadow};\n\n  &:hover,\n  &:focus {\n    text-decoration: overline ${p => p.theme.colors.darkPink};\n  }\n`;\n\nexport const FilterWrap = styled.div`\n  display: flex;\n  width: 100%;\n  border: 2px solid ${p => p.theme.colors.pink};\n  border-radius: ${p => p.theme.radii.normal};\n  margin-top: ${p => p.theme.space[2]}px;\n\n  ${LabelFilter}:hover & {\n    border-color: ${p => p.theme.colors.darkPink};\n  }\n\n  ${LabelFilter}:focus & {\n    border-color: ${p => p.theme.colors.darkPink};\n  }\n`;\n\nexport const IconSearch = styled(HiSearch)`\n  font-size: 38px;\n  color: ${p => p.theme.colors.pink};\n\n  ${LabelFilter}:hover & {\n    color: ${p => p.theme.colors.darkPink};\n  }\n\n  ${LabelFilter}:focus & {\n    color: ${p => p.theme.colors.darkPink};\n  }\n`;\n","import { Box } from 'constants';\nimport * as SC from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <Box>\n      <SC.LabelFilter htmlFor=\"filter\">\n        Find contacts by name:\n        <SC.FilterWrap display=\"flex\">\n          <SC.IconSearch />\n          <SC.InputFilter\n            type=\"text\"\n            name=\"filter\"\n            title=\"Filter contacts by name or by number\"\n            required\n            onChange={event => dispatch(addFilter(event.target.value))}\n          />\n        </SC.FilterWrap>\n      </SC.LabelFilter>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListOfContacts = styled.ul`\n  width: 360px;\n`;\n","import styled from 'styled-components';\nimport { HiTrash } from 'react-icons/hi';\n\nexport const ContactItem = styled.div`\n  padding: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: ${p => p.theme.radii.normal};\n\n  &:hover,\n  &:focus {\n    outline: 2px solid ${p => p.theme.colors.pink};\n  }\n`;\n\nexport const P = styled.p`\n  margin-left: ${p => p.theme.space[2]}px;\n`;\n\nexport const DeleteButton = styled.button`\n  display: flex;\n  align-items: flex-end;\n  padding: ${p => p.theme.space[1]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: none;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n\nexport const DeleteIcon = styled(HiTrash)`\n  color: ${p => p.theme.colors.pink};\n\n  ${DeleteButton}:hover & {\n    color: ${p => p.theme.colors.darkPink};\n  }\n\n  ${DeleteButton}:focus & {\n    color: ${p => p.theme.colors.darkPink};\n  }\n`;\n","import * as SC from './Contact.styled';\nimport PropTypes from 'prop-types';\nimport Avatar from 'react-avatar';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/operations';\nimport { Box } from 'constants';\n\nexport const Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <SC.ContactItem>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Avatar round={true} size={40} name={name} />\n        <SC.P>\n          {name}: {number}\n        </SC.P>\n      </Box>\n      <SC.DeleteButton\n        type=\"button\"\n        onClick={() => dispatch(deleteContacts(id))}\n      >\n        <SC.DeleteIcon size={24} />\n      </SC.DeleteButton>\n    </SC.ContactItem>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import * as SC from './ContactList.styled';\nimport { Contact } from 'components/Contact';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <SC.ListOfContacts>\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <Contact name={name} number={number} id={id} />\n          </li>\n        ))}\n    </SC.ListOfContacts>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Box } from 'constants';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport Loader from 'components/Loader';\nimport { useEffect } from 'react';\nimport { fetchAll } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchAll());\n  }, [dispatch]);\n\n  return (\n    <Box\n      p={3}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      flexDirection=\"column\"\n    >\n      <Box as=\"h2\" mb={3}>\n        Phonebook\n      </Box>\n      <ContactForm />\n\n      <Box as=\"h2\" mb={3}>\n        Contacts\n      </Box>\n      <Filter />\n      {isLoading && !error ? <Loader /> : <ContactList />}\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["FormOfContact","styled","Form","p","theme","space","LabelForm","colors","pink","shadow","darkPink","InputForm","Field","radii","normal","ButtonForm","white","fontWeights","bold","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","name","number","toLowerCase","includes","schema","yup","shape","required","matches","initialValues","ContactForm","dispatch","useDispatch","useSelector","validationSchema","onSubmit","action","find","contact","Notify","addContacts","resetForm","htmlFor","type","render","msg","InputFilter","LabelFilter","FilterWrap","IconSearch","HiSearch","Filter","display","title","onChange","event","addFilter","target","value","ListOfContacts","ContactItem","P","DeleteButton","DeleteIcon","HiTrash","Contact","id","alignItems","round","size","onClick","deleteContacts","ContactList","length","map","useEffect","fetchAll","justifyContent","flexDirection","as","mb","Loader"],"sourceRoot":""}